# Generated by Django 2.2.9 on 2020-11-18 00:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('indicators', '0090_information_use_and_qa_to_comments'),
    ]

    operations = [
        migrations.AlterField(
            model_name='indicator',
            name='baseline',
            field=models.CharField(blank=True, help_text='Enter a numeric value for the baseline. If a baseline is not yet known or not applicable, enter a zero or select the "Not applicable" checkbox. The baseline can always be updated at later point in time.', max_length=255, null=True, verbose_name='Baseline'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='data_collection_frequency',
            field=models.ForeignKey(blank=True, help_text='How frequently will you collect data for this indicator? The frequency and timing of data collection should be based on how often data are needed for management purposes, the cost of data collection, and the pace of change anticipated. If an indicator requires multiple data sources collected at varying frequencies, then it is recommended to select the frequency at which all data will be collected for calculation.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='indicators.DataCollectionFrequency', verbose_name='Frequency of data collection'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='data_collection_method',
            field=models.TextField(blank=True, help_text='Explain the process used to collect data (e.g., population-based sampling with randomized selection, review of partner records, etc.) Explain how the means of verification or data sources will be collected. Describe the methodological approaches the indicator will apply for data collection.', max_length=2500, null=True, verbose_name='Data collection method'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='data_issues',
            field=models.TextField(blank=True, help_text='List any limitations of the data used to calculate this indicator (e.g., issues with validity, reliability, accuracy, precision, and/or potential for double counting.) Data issues can be related to indicator design, data collection methods, and/or data analysis methods. Please be specific and explain how data issues were addressed.', max_length=500, null=True, verbose_name='Data issues'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='data_points',
            field=models.TextField(blank=True, help_text='List all data points required for reporting. While some indicators require a single data point (# of students attending training), others require multiple data points for calculation. For example, to calculate the % of students graduated from a training course, the two data points would be # of students graduated (numerator) and # of students enrolled (denominator).', max_length=1000, null=True, verbose_name='Data points'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='definition',
            field=models.TextField(blank=True, help_text='Provide a long-form definition of the indicator and all key terms that need further detail for precise and reliable measurement. Anyone reading the definition should understand exactly what the indicator is measuring without any ambiguity.', null=True, verbose_name='Definition'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='direction_of_change',
            field=models.IntegerField(choices=[(1, 'Not applicable'), (2, 'Increase (+)'), (3, 'Decrease (-)')], default=1, help_text='Is your program trying to achieve an increase (+) or decrease (-) in the indicator\'s unit of measure? This field is important for the accuracy of our "indicators on track" metric. For example, if we are tracking a decrease in cases of malnutrition, we will have exceeded our indicator target when the result is lower than the target.', null=True, verbose_name='Direction of Change'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='disaggregation',
            field=models.ManyToManyField(blank=True, help_text='Select all relevant disaggregations. Disaggregations are managed by the TolaData country administrator. Mercy Corps required disaggregations (e.g. SADD) are selected by default, but can be deselected when they are not applicable to the indicator.', to='indicators.DisaggregationType', verbose_name='Disaggregation'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='indicator_changes',
            field=models.TextField(blank=True, help_text=' ', max_length=500, null=True, verbose_name='Changes to indicator'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='indicator_type',
            field=models.ManyToManyField(blank=True, help_text='Classifying indicators by type allows us to filter and analyze related sets of indicators.', to='indicators.IndicatorType', verbose_name='Indicator type'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='information_use',
            field=models.TextField(blank=True, choices=[('donor_reporting', 'Donor and/or stakeholder reporting'), ('internal_program_management', 'Internal program management and learning'), ('participant_accountability', 'Participant accountability')], help_text='Select the primary uses of the indicator and its intended audience. This is the most important field in an indicator plan, because it explains the utility of the indicator. If an indicator has no clear informational purpose, then it should not be tracked or measured. By articulating who needs the indicator data, why and what they need it for, teams ensure that only useful indicators are included in the program.', max_length=500, null=True, verbose_name='Information use'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='justification',
            field=models.TextField(blank=True, help_text='Explain why the indicator was chosen for this program.', max_length=500, null=True, verbose_name='Rationale or justification for indicator'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='level',
            field=models.ForeignKey(blank=True, help_text='Select the result this indicator is intended to measure.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='indicators.Level', verbose_name='Level'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='means_of_verification',
            field=models.TextField(blank=True, help_text='Identify the source of indicator data and the tools used to collect data (e.g., surveys, checklists, etc.) Indicate whether these tools already exist or will need to be developed.', max_length=1500, null=True, verbose_name='Means of verification / data source'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='method_of_analysis',
            field=models.TextField(blank=True, help_text='The method of analysis should be detailed enough to allow an auditor or third party to reproduce the analysis or calculation and generate the same result.', max_length=4000, null=True, verbose_name='Method of analysis'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='name',
            field=models.CharField(help_text='Provide an indicator statement of the precise information needed to assess whether intended changes have occurred.', max_length=500, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='quality_assurance',
            field=models.TextField(blank=True, choices=[('data_cleaning', 'Data cleaning and processing'), ('data_collection', 'Data collection training and piloting'), ('data_cross_checks', 'Data cross checks or triangulation'), ('dqas', 'Data quality audits (DQAs)'), ('data_spot_checks', 'Data spot checks'), ('digital_data_collection', 'Digital data collection tools'), ('participatory_data_analysis', 'Participatory data analysis validation'), ('peer_reviews', 'Peer reviews or reproducibility checks'), ('randomized_phone_calls', 'Randomized phone calls to respondents'), ('randomized_visits', 'Randomized visits to respondents'), ('regular_reviews', 'Regular indicator and data reviews'), ('shadow_audits', 'Shadow audits'), ('standardized_indicators', 'Standardized indicators'), ('sops', 'Standard operating procedures (SOPs)')], help_text='Select any quality assurance measures specific to this indicator.', max_length=500, null=True, verbose_name='Quality assurance measures'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='rationale_for_target',
            field=models.TextField(blank=True, help_text='Provide an explanation for any target value/s assigned to this indicator. You might include calculations and any historical or secondary data sources used to estimate targets.', max_length=255, null=True, verbose_name='Rationale for target'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='reporting_frequency',
            field=models.ForeignKey(blank=True, help_text='This frequency should make sense in relation to the data collection frequency and target frequency and should adhere to any requirements regarding program, stakeholder, and/or donor accountability and reporting.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='indicators.ReportingFrequency', verbose_name='Frequency of reporting'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='responsible_person',
            field=models.TextField(blank=True, help_text='List the people or team(s) responsible for data collection. This can include community volunteers, program team members, local partner(s), enumerators, consultants, etc.', max_length=500, null=True, verbose_name='Responsible person(s) and team'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='sector',
            field=models.ForeignKey(blank=True, help_text='Classifying indicators by sector allows us to filter and analyze related sets of indicators.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Sector', verbose_name='Sector'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='source',
            field=models.CharField(blank=True, help_text='Identify the source of this indicator (e.g. Mercy Corps DIG, EC, USAID, etc.) If the indicator is brand new and created specifically for the program, enter "Custom."', max_length=255, null=True, verbose_name='Source'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='strategic_objectives',
            field=models.ManyToManyField(blank=True, help_text='Identifying the country strategic objectives to which an indicator contributes, allows us to filter and analyze related sets of indicators. Country strategic objectives are managed by the TolaData country administrator.', related_name='strat_indicator', to='indicators.StrategicObjective', verbose_name='Country Strategic Objective'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='target_frequency',
            field=models.IntegerField(choices=[(1, 'Life of Program (LoP) only'), (2, 'Midline and endline'), (3, 'Annual'), (4, 'Semi-annual'), (5, 'Tri-annual'), (6, 'Quarterly'), (7, 'Monthly'), (8, 'Event')], help_text="This selection determines how the indicator's targets and results are organized and displayed. Target frequencies will vary depending on how frequently the program needs indicator data to properly manage and report on program progress.", null=True, verbose_name='Target frequency'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='unit_of_measure',
            field=models.CharField(blank=True, help_text='Enter a meaningful description of what the indicator uses as its standard unit (e.g. households, kilograms, kits, participants, etc.)', max_length=135, null=True, verbose_name='Unit of measure'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='unit_of_measure_type',
            field=models.IntegerField(choices=[(1, 'Number (#)'), (2, 'Percentage (%)')], default=1, help_text='This selection determines how results are calculated and displayed.', null=True, verbose_name='Unit Type'),
        ),
    ]
